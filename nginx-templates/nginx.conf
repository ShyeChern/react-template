
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    # gzip  on;
		# gzip_types text/plain application/xml application/json;
		# minimum size to compress = 1024 byte
		# gzip_min_length 1024;

	proxy_cache_path "C:/Program Files/nginx-1.20.1/temp" keys_zone=backcache:10m;

	map $http_upgrade $connection_upgrade {  
		default upgrade;  
		' '     close;  
	}

	# Load balancing
	upstream api {
		#List of nodejs server
		server 127.0.0.1:5000;
	}
	
	# HTTP server
	server {
		listen 80;
		server_name localhost;
				
		# Redirect all HTTP requests to HTTPS
		location / {
			return 301 https://$server_name$request_uri;
		}
	} 

    # HTTPS server
    
    server {
        listen       443 ssl http2;
        server_name  localhost;
		root	C:/Users/chern/Documents/GitHub/react-template/build;

		# SSL Setting
        ssl_certificate      C:/Users/chern/Documents/GitHub/nodejs-template/server.cert;
        ssl_certificate_key  C:/Users/chern/Documents/GitHub/nodejs-template/server.key;
        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;
		
		# Logs
		access_log  logs/custom.access.log;
		error_log  logs/custom.error.log;

        #charset koi8-r;

        location / {
			#return 503 error code
			return 503;
			
			#add backslash to end of url
			#rewrite ^([^.]*[^/])$ $1/ permanent;
			
			#if there is other path
            #root C:/custom-path/build;
			try_files $uri /index.html;
        }
		
		# if uri end with png and jpeg extension, find the image in current path "/" (static file)
		location ~ \.(png|jpeg) {
			try_files $uri /;
		}
		
		# if 503 code use custom html page
		error_page 503 @maintenance;
        location @maintenance {
            rewrite ^(.*)$ /maintenance.html break;
        }

        #error_page 404 /404.html;

        # redirect server error pages to the static page /50x.html
        error_page   500 502 504  /50x.html;
        location = /50x.html {
            root   html;
        }
		
		# Load balance requests for '/api' across Node.js app servers 
		location /api/ {  
			proxy_pass https://api;  
			proxy_cache backcache;
			allow 127.0.0.1;
			deny all;
		}
    }
}
